--@name The Stargate Controler
--@author TAJG

--[[
	################################################################################
	#### Here it is, The Stargate Controller (ChatDialer V3). 					####
	#### The goal for this chip was to be more stabel then versions 			####
	#### At the start of writing this chip i set myself a goal, to not use any	####
	#### think hooks; using only the listener hook that Person8880 coded into 	####
	#### library and the ChatLib.listen() hook :)								####
	################################################################################
]]
local EntLib = loadLibrary("ents")
local SGLib = loadLibrary("stargate")
local ChatLib = loadLibrary("chat")
local SGList = SGLib.getAllStargates()
local Chip = EntLib.self()
local Owner = Chip:owner()
local Gate = Chip:isWeldedTo()
local Iris = Gate:iris()
local Message = "/iris"
local IDCList = { "1337", "12987" }
local ColourRed = { 255, 0, 0 }


--[[ 
	Currently doesnt work :/
	Checks to see if the Gate is actually a gate
	for i = 1, #SGList do
		if Gate == SGList[i] then
			return
		elseif Gate ~= SGList[i] then
			--error("You didnt spawn the chip on a Stargate!")
			return
		end
	end
]]--

if Iris == nil then
    print("Please Spawn an Iris on the gate!")
    error("Please spawn an Iris on the gate!")
elseif Iris ~= nil then
	print("Good, you have an Iris")
end

local function SearchIDC(IDC)
	for i=1, #IDCList do 
		if IDC == IDCList[i] then
			Verified = true
			break
		end
	end
end

function IrisSet(Params)
    if Params == "close" and SGLib.irisActive(Iris) == false then
		      SGLib.irisToggle(Iris)
	   elseif Params == "open" and SGLib.irisActive(Iris) == true then 
		      SGLib.irisToggle(Iris)
    end
end

function DialLeGate(Params) -- How to split strings.....
    ANum, MNum = Params:find("%s")
    Address = Params:sub(1, ANum)
    --Mode = Params:Sub(MNum)
    local DialMode = 0 -- Mode or 1
    print(string.format("Dialing: %s", Address))
    SGLib.dial(Gate, Address:upper(), DialMode)
end

function Helper()
    Help = {
        "Chat commands: ",
        "/gd <ADDRESS> | Dials the gate to the specified address",
        "/ir <open OR close | Sets the iris to the specified state",
        "/gc | Closes the gate",
        "/sn <name> | Sets the gates name",
        "/sa <address> | Sets the gates address",
        "/sg <group> | Sets the gates group",
        "/hl | Displays this help",
        "/or | Overides the IDC checking system *this command and actual functionality comming soon*"}
    for i = 1, #Help do
        print( Help[i] )
    end
end

function ChatToCommand(Message, Player)
    Command = Message:sub(1, 3)
    Params = Message:sub(5)
    print(string.format("%q", Command)) print(string.format("%q", Params))
    if Command == "/gd" then
        DialLeGate(Params)
    elseif Command == "/ir" then
        IrisSet(Params)
    elseif Command == "/gc" then
        SGLib.close(Gate)
    elseif Command == "/sn" then
    	Gate:setName(Params)
    elseif Command == "/sa" then 
    	Gate:setAddress(Params)
    elseif Command == "/sg" then
    	Gate:setGroup(Params)
    elseif Command == "/hl" then
    	Helper()
    elseif Command == "/or" then
        Verified = true
    end
end

-- Listeners
ChatLib.listen(ChatToCommand, Owner)
Gate:listenForCode(SearchIDC, Gate)
--[[print("Testing")
ChatLib.botSay("TAJG","TEST")
]]--
